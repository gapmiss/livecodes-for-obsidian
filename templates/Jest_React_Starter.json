{
  "title": "Jest/React Starter",
  "description": "",
  "tags": [],
  "autoupdate": true,
  "autosave": false,
  "delay": 1500,
  "formatOnsave": false,
  "mode": "full",
  "theme": "dark",
  "recoverUnsaved": true,
  "showSpacing": false,
  "welcome": true,
  "readonly": false,
  "allowLangChange": true,
  "activeEditor": "script",
  "markup": {
    "language": "html",
    "content": "<div id=\"app\">Loading...</div>\n"
  },
  "style": {
    "language": "css",
    "content": ".container,\n.container button {\n  text-align: center;\n  font: 1em sans-serif;\n}\n.logo {\n  width: 150px;\n}\n.info {\n  color: #404040;\n  font-size: 0.9em;\n  margin: 2em;\n}\n"
  },
  "script": {
    "language": "jsx",
    "content": "import React, { useState } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nexport const increment = (count) => (count ?? 0) + 1;\n\nexport default function App(props) {\n  const [count, setCount] = useState(0);\n  return (\n    <div className=\"container\">\n      <h1>Hello, {props.name}!</h1>\n      <img className=\"logo\" alt=\"logo\" src=\"https://livecodes.io//livecodes/assets/templates/jest.svg\" />\n      <p>You clicked {count} times.</p>\n      <button onClick={() => setCount(increment(count))}>Click me</button>\n      <p className=\"info\">Run tests in the \"Tests\" panel below.</p>\n    </div>\n  );\n}\n\nconst root = createRoot(document.querySelector(\"#app\"));\nroot.render(<App name=\"Jest with React\" />);\n"
  },
  "stylesheets": [],
  "scripts": [],
  "cssPreset": "",
  "imports": {},
  "types": {},
  "tests": {
    "language": "tsx",
    "content": "import React from \"react\";\nimport { render, fireEvent, waitFor, screen, cleanup } from \"@testing-library/react\";\nimport \"@testing-library/jest-dom\";\nimport { assert } from \"chai\";\nimport App, { increment } from \"./script\";\n\nconst renderComponent = () => {\n  cleanup();\n  return waitFor(() => {\n    return render(<App name=\"Jest with React\" />, {\n      container: document.querySelector('#app')\n    });\n  });\n}\n\nbeforeEach(renderComponent);\n\nafterAll(renderComponent);\n\ndescribe(\"Increment\", () => {\n  test(\"should increment count\", () => {\n    expect(increment(3)).toBe(4);\n  });\n\n  test(\"should return 1 if no count was supplied\", () => {\n    assert.equal(increment(), 1);\n  });\n});\n\ndescribe(\"Page\", () => {\n  test(\"Should display title\", async () => {\n    expect(screen.getByText(\"Hello\", { exact: false })).toHaveTextContent(\n      \"Hello, Jest with React!\"\n    );\n  });\n\n  test(\"Should display logo\", async () => {\n    expect(document.querySelector('.logo').src).toContain('jest.svg');\n  });\n\n  test(\"Should increment counter on button click\", async () => {\n    await fireEvent.click(screen.getByText(\"Click me\"));\n    await fireEvent.click(screen.getByText(\"Click me\"));\n    await fireEvent.click(screen.getByText(\"Click me\"));\n    expect(screen.getByText(\"You clicked\", { exact: false })).toHaveTextContent(\n      \"You clicked 3 times.\"\n    );\n  });\n});\n"
  },
  "tools": {
    "enabled": "all",
    "active": "",
    "status": ""
  },
  "zoom": 1,
  "processors": [],
  "customSettings": {},
  "useTabs": false,
  "tabSize": 2,
  "lineNumbers": true,
  "wordWrap": false,
  "closeBrackets": true,
  "semicolons": true,
  "singleQuote": false,
  "trailingComma": true,
  "emmet": true,
  "version": "10"
}